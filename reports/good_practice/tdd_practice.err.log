Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Function for ideal_gas_law
def ideal_gas_law(number_of_moles, temperature, volume):

    return 

# Tests correct equation
np.testing.assert_almost_equal(ideal_gas_law(100, 100, 0.82057338), 101325.03467270655)
print('Test 1 for Problem 1 Passed!')

# Tests correct equation
np.testing.assert_almost_equal(ideal_gas_law(1, 500, 5), 831.4462618)
print('Test 2 for Problem 1 Passed!')

# Tests for unphysical temperatures
np.testing.assert_raises(ValueError, ideal_gas_law, 1, -1, 10)
print('Test 3 for Problem 1 Passed!')

# Tests for unphysical number of moles
np.testing.assert_raises(ValueError, ideal_gas_law, -1, 1, 10)
print('Test 4 for Problem 1 Passed!')

# Tests for unphysical pressure
np.testing.assert_raises(ValueError, ideal_gas_law, 1, 1, -101325)
print('Test 5 for Problem 1 Passed!')
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[2], line 7[0m
[1;32m      4[0m     [38;5;28;01mreturn[39;00m 
[1;32m      6[0m [38;5;66;03m# Tests correct equation[39;00m
[0;32m----> 7[0m [43mnp[49m[38;5;241;43m.[39;49m[43mtesting[49m[38;5;241;43m.[39;49m[43massert_almost_equal[49m[43m([49m[43mideal_gas_law[49m[43m([49m[38;5;241;43m100[39;49m[43m,[49m[43m [49m[38;5;241;43m100[39;49m[43m,[49m[43m [49m[38;5;241;43m0.82057338[39;49m[43m)[49m[43m,[49m[43m [49m[38;5;241;43m101325.03467270655[39;49m[43m)[49m
[1;32m      8[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;124mTest 1 for Problem 1 Passed![39m[38;5;124m'[39m)
[1;32m     10[0m [38;5;66;03m# Tests correct equation[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/numpy/testing/_private/utils.py:589[0m, in [0;36massert_almost_equal[0;34m(actual, desired, decimal, err_msg, verbose)[0m
[1;32m    587[0m [38;5;28;01mexcept[39;00m ([38;5;167;01mNotImplementedError[39;00m, [38;5;167;01mTypeError[39;00m):
[1;32m    588[0m     [38;5;28;01mpass[39;00m
[0;32m--> 589[0m [38;5;28;01mif[39;00m [38;5;28mabs[39m([43mdesired[49m[43m [49m[38;5;241;43m-[39;49m[43m [49m[43mactual[49m) [38;5;241m>[39m[38;5;241m=[39m np[38;5;241m.[39mfloat64([38;5;241m1.5[39m [38;5;241m*[39m [38;5;241m10.0[39m[38;5;241m*[39m[38;5;241m*[39m([38;5;241m-[39mdecimal)):
[1;32m    590[0m     [38;5;28;01mraise[39;00m [38;5;167;01mAssertionError[39;00m(_build_err_msg())

[0;31mTypeError[0m: unsupported operand type(s) for -: 'float' and 'NoneType'

